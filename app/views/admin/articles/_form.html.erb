<%= form_for([:admin, @article]) do |f| %>
  <%= render 'layouts/admin/errors', _models: @article %>

  <div class="form-group">
    <%= f.label :title %>
    <%= f.text_field :title, class: 'form-control' %>
  </div>
  <div class="form-group">
    <%= f.label :article_category_id %>
    <% 
      if params[:article_category_id] || action_name == 'edit'
        article_category = ArticleCategory.find(params[:article_category_id]) if params[:article_category_id]
        article_category = @article.article_category.self_and_ancestors.find { |ar| ar.level == 1 } if action_name == 'edit'
        if article_category.root.name == '科室建设'
          article_categories = [article_category.descendants.map { |k| ["#{'--' * (k.level-2)} #{k.name}", k.id] }]
          article_categories = [article_categories.unshift([article_category.name])]
        else
          # article_category.self_and_descendants.map { |k| ["#{'--' * (k.level-1)} #{k.name}", k.id] }
          article_categories = [article_category.self_and_descendants.map { |k| ["#{'--' * (k.level-1)} #{k.name}", k.id] }]
          article_categories = [article_categories.unshift([article_category.root.name])]
        end
      else
        article_categories = ArticleCategory.roots.map { |i| [[i.name], i.descendants.map { |k| ["#{'--' * (k.level-1)} #{k.name}", k.id] }]} 
      end
    %>
    <%= f.select :article_category_id, grouped_options_for_select(article_categories), {}, {class: "form-control"} %>
  </div>
  <div class="form-group">
    <%= f.label :author %>
    <%= f.text_field :author, class: 'form-control' %>
  </div>
  <div class="form-group">
    <%= f.label :brief %>
    <%= f.text_area :brief, class: 'form-control' %>
  </div>
  <div class="form-group">
    <%= f.label :content %>
    <%#= tinymce :theme => "simple", :language => "de", :plugins => ["wordcount", "paste"] %>
    <%= f.text_area :content, :class => "tinymce", :rows => 20, :cols => 60 %>
  </div>

  <div class="actions">
    <%= f.submit "提交", class: "btn btn-primary" %>
  </div>
<% end %>
<script type="text/javascript">
  tinyMCE.init({
    selector: 'textarea.tinymce',
    plugins: 'preview fullscreen code image imagetools media link lists table textcolor lineheight',
    toolbar: 'formatselect | bold italic strikethrough forecolor backcolor removeformat | link image | alignleft aligncenter alignright alignjustify | numlist bullist outdent indent | fullscreen preview',
    readonly: $('textarea.tinymce').attr('readonly') == 'readonly',
    language: 'zh_CN',
    images_upload_handler: function (blobInfo, success, failure) {
      formData = new FormData();
      formData.append('image[attachment]', blobInfo.blob(), blobInfo.filename());
      $.ajax({
        type: 'POST',
        url: '/admin/articles/images',
        dataType: "json",
        data: formData,
        processData: false,
        contentType: false,
        success: function (data) {
          console.log(data)
          if (data.status == 'success') {
            console.log(data.url)
            success(data.url);
          } else {
            failure(data.msg);
          }
        },
        error: function () {
          failure('服务器繁忙，请稍后重试！');
        }
      });
    }
  });
</script>